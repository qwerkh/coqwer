{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/profitLost.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/profitLost.vue","filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/profitLost.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/cosmetic","root":"/home/snr/Desktop/Project/cosmetic","generatorOpts":{"filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/profitLost.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/profitLost.vue"}},"code":"module.exportDefault({\n  data: function () {\n    return {\n      profitLostReport: {\n        roleBranchOptionsModel: [],\n        roleAreaOptionsModel: [],\n        exchangeOptionsModel: \"\",\n        dateRange: \"\"\n      },\n      roleBranchOptions: [],\n      roleAreaOptions: [],\n      patientOptions: [],\n      typeOptions: [],\n      exchangeOptions: [],\n      dateRange: \"\",\n      activeName: \"1\",\n      profitLostsData: [],\n      loading: false,\n      companyName: \"\",\n      companyEnName: \"\",\n      addressName: \"\",\n      branchHeader: \"All\",\n      dateRangeHeader: \"All\",\n      pickerOptions2: {\n        shortcuts: [{\n          text: 'Last week',\n          onClick: function (picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Last month',\n          onClick: function (picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n            picker.$emit('pick', [start, end]);\n          }\n        }, {\n          text: 'Last 3 months',\n          onClick: function (picker) {\n            var end = new Date();\n            var start = new Date();\n            start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n            picker.$emit('pick', [start, end]);\n          }\n        }]\n      },\n      printLoading: false\n    };\n  },\n  methods: {\n    fetchBranchOption: function () {\n      var _this = this;\n\n      Meteor.call(\"fetchRolesBranch\", Meteor.userId(), function (err, result) {\n        _this.roleBranchOptions = result;\n      });\n    },\n    fetchAreaOption: function (val) {\n      var _this2 = this;\n\n      Meteor.call(\"fetchRolesAreaByMultiRoleBranch\", Meteor.userId(), val, function (err, result) {\n        _this2.roleAreaOptions = result;\n      });\n    },\n    fetchExchangeOption: function (val) {\n      var _this3 = this;\n\n      Meteor.call(\"fetchExchangeOption\", val, function (err, result) {\n        _this3.exchangeOptions = result;\n      });\n    },\n    fetchExchangeOption: function () {\n      var _this4 = this;\n\n      Meteor.call(\"fetchExchangeOption\", function (err, result) {\n        _this4.exchangeOptions = result;\n      });\n    },\n    handleRunReport: function (formName) {\n      var _this5 = this;\n\n      var params = {};\n      var userId = Meteor.userId();\n      this.loading = true;\n\n      if (this.profitLostReport.roleAreaOptionsModel != \"\") {\n        params.rolesArea = {\n          $in: this.profitLostReport.roleAreaOptionsModel\n        };\n        Meteor.call(\"getBranchHeader\", this.profitLostReport.roleAreaOptionsModel, function (err, result) {\n          _this5.branchHeader = result;\n        });\n      }\n\n      if (this.profitLostReport.dateRange != \"\") {\n        params.journalDate = {\n          $gte: moment(this.profitLostReport.dateRange[0]).startOf(\"days\").toDate(),\n          $lte: moment(this.profitLostReport.dateRange[1]).endOf(\"days\").toDate()\n        };\n        this.dateRangeHeader = moment(this.profitLostReport.dateRange[0]).format(\"DD/MM/YYYY\") + \"-\" + moment(this.profitLostReport.dateRange[1]).format(\"DD/MM/YYYY\");\n      }\n\n      if (this.profitLostReport.exchangeOptionsModel == \"\") {\n        alertify.error(\"Exchange Can't Empty!!\");\n        this.loading = false;\n        return false;\n      }\n\n      Meteor.call('giveMeProfitLostReport', params, this.profitLostReport.exchangeOptionsModel, userId, function (err, result) {\n        if (!err) {\n          _this5.profitLostsData = result;\n        }\n\n        _this5.loading = false;\n      });\n    },\n    getCompany: function () {\n      var _this6 = this;\n\n      Meteor.call(\"getCompany\", function (err, result) {\n        if (!err) {\n          _this6.companyName = result.khName;\n          _this6.companyEnName = result.enName;\n          _this6.addressName = result.khAddress;\n        }\n      });\n    },\n\n    /* exportToExcel(){\n     Meteor.call('giveMeProfitLostReport', this.profitLostsData, (err, workbookBuffer) => {\n     if (!err) {\n     //call mixin saveAs from '/imports/api/mixins/file-saver-fn.js'\n     this.saveAs(workbookBuffer, 'ProfitLostReport');\n     }\n     })\n     },*/\n    PrintReport: function () {\n      window.print();\n    }\n  },\n  watch: {\n    \"profitLostReport.roleBranchOptionsModel\": function (val) {\n      this.fetchAreaOption(val);\n    },\n    \"profitLostReport.roleAreaOptionsModel\": function (val) {\n      this.fetchPatientOption(val);\n    }\n  },\n  created: function () {\n    this.fetchBranchOption();\n    this.fetchExchangeOption();\n    this.getCompany();\n    this.profitLostReport.dateRange = [moment().startOf(\"months\").toDate(), moment().endOf(\"months\").toDate()];\n  },\n  computed: {\n    dataExist: function () {\n      return this.profitLostsData.length > 0;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/cosmetic/imports/vue/ui/profitLost.vue"],"names":["module","exportDefault","data","profitLostReport","roleBranchOptionsModel","roleAreaOptionsModel","exchangeOptionsModel","dateRange","roleBranchOptions","roleAreaOptions","patientOptions","typeOptions","exchangeOptions","activeName","profitLostsData","loading","companyName","companyEnName","addressName","branchHeader","dateRangeHeader","pickerOptions2","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","printLoading","methods","fetchBranchOption","Meteor","call","userId","err","result","fetchAreaOption","val","fetchExchangeOption","handleRunReport","formName","params","rolesArea","$in","journalDate","$gte","moment","startOf","toDate","$lte","endOf","format","alertify","error","getCompany","khName","enName","khAddress","PrintReport","window","print","watch","fetchPatientOption","created","computed","dataExist","length"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            profitLostReport: {\n                roleBranchOptionsModel: [],\n                roleAreaOptionsModel: [],\n                exchangeOptionsModel: \"\",\n                dateRange: \"\"\n            },\n\n            roleBranchOptions: [],\n            roleAreaOptions: [],\n            patientOptions: [],\n            typeOptions: [],\n\n            exchangeOptions: [],\n\n            dateRange: \"\",\n            activeName: \"1\",\n            profitLostsData: [],\n            loading: false,\n\n            companyName: \"\",\n            companyEnName: \"\",\n            addressName: \"\",\n\n            branchHeader: \"All\",\n            dateRangeHeader: \"All\",\n            pickerOptions2: {\n                shortcuts: [{\n                    text: 'Last week',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: 'Last month',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }, {\n                    text: 'Last 3 months',\n                    onClick(picker) {\n                        const end = new Date();\n                        const start = new Date();\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n                        picker.$emit('pick', [start, end]);\n                    }\n                }]\n            },\n            printLoading: false,\n        }\n    },\n    methods: {\n        fetchBranchOption() {\n            Meteor.call(\"fetchRolesBranch\", Meteor.userId(), (err, result) => {\n                this.roleBranchOptions = result;\n            })\n        },\n        fetchAreaOption(val) {\n            Meteor.call(\"fetchRolesAreaByMultiRoleBranch\", Meteor.userId(), val, (err, result) => {\n                this.roleAreaOptions = result;\n            })\n        },\n        fetchExchangeOption(val) {\n            Meteor.call(\"fetchExchangeOption\", val, (err, result) => {\n                this.exchangeOptions = result;\n            })\n        },\n        fetchExchangeOption() {\n            Meteor.call(\"fetchExchangeOption\", (err, result) => {\n                this.exchangeOptions = result;\n            })\n        },\n\n        handleRunReport(formName) {\n\n            let params = {};\n            let userId=Meteor.userId();\n\n            this.loading = true;\n            if (this.profitLostReport.roleAreaOptionsModel != \"\") {\n                params.rolesArea = {$in: this.profitLostReport.roleAreaOptionsModel};\n\n                Meteor.call(\"getBranchHeader\", this.profitLostReport.roleAreaOptionsModel, (err, result) => {\n                    this.branchHeader = result;\n                })\n            }\n\n            if (this.profitLostReport.dateRange != \"\") {\n                params.journalDate = {\n                    $gte: moment(this.profitLostReport.dateRange[0]).startOf(\"days\").toDate(),\n                    $lte: moment(this.profitLostReport.dateRange[1]).endOf(\"days\").toDate()\n                };\n                this.dateRangeHeader = moment(this.profitLostReport.dateRange[0]).format(\"DD/MM/YYYY\") + \"-\" + moment(this.profitLostReport.dateRange[1]).format(\"DD/MM/YYYY\");\n            }\n\n            if(this.profitLostReport.exchangeOptionsModel==\"\"){\n                alertify.error(\"Exchange Can't Empty!!\");\n                this.loading = false;\n                return false;\n            }\n\n            Meteor.call('giveMeProfitLostReport', params, this.profitLostReport.exchangeOptionsModel,userId, (err, result) => {\n                if (!err) {\n                    this.profitLostsData = result;\n                }\n                this.loading = false;\n            });\n\n\n        },\n        getCompany() {\n            Meteor.call(\"getCompany\", (err, result) => {\n                if (!err) {\n                    this.companyName = result.khName;\n                    this.companyEnName = result.enName;\n                    this.addressName = result.khAddress;\n                }\n            })\n\n        },\n\n        /* exportToExcel(){\n         Meteor.call('giveMeProfitLostReport', this.profitLostsData, (err, workbookBuffer) => {\n         if (!err) {\n         //call mixin saveAs from '/imports/api/mixins/file-saver-fn.js'\n         this.saveAs(workbookBuffer, 'ProfitLostReport');\n         }\n         })\n         },*/\n        PrintReport() {\n            window.print();\n        }\n    },\n    watch: {\n\n\n        \"profitLostReport.roleBranchOptionsModel\"(val) {\n            this.fetchAreaOption(val);\n        }\n        ,\n        \"profitLostReport.roleAreaOptionsModel\"(val) {\n            this.fetchPatientOption(val);\n        }\n\n    },\n    created() {\n        this.fetchBranchOption();\n        this.fetchExchangeOption();\n        this.getCompany();\n        this.profitLostReport.dateRange = [moment().startOf(\"months\").toDate(), moment().endOf(\"months\").toDate()];\n\n\n    },\n    computed: {\n        dataExist() {\n            return this.profitLostsData.length > 0;\n        }\n    },\n\n}\n"]},"sourceType":"script","hash":"dcf23c3e8cc5ef7f25b99285020cd286d767b82f"}
