{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/patientImage.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/patientImage.vue","filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/patientImage.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/cosmetic","root":"/home/snr/Desktop/Project/cosmetic","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/patientImage.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/patientImage.vue"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar firebase;\nmodule.link(\"firebase\", {\n  \"default\": function (v) {\n    firebase = v;\n  }\n}, 0);\n\nvar Compress = require('compress.js');\n\nmodule.exportDefault({\n  meteor: {},\n  mounted: function () {},\n  data: function () {\n    return {\n      uploadValue: 0,\n      selectedFile: '',\n      imgUrl: \"\"\n    };\n  },\n  watch: {},\n  methods: {\n    onFileSelected: function (e) {\n      var _this = this;\n\n      var vm = this;\n      this.imgUrl = window.URL.createObjectURL(e.target.files[0]);\n      /* Meteor.setTimeout(function () {\n         vm.onUpload();\n       }, 500);*/\n\n      var tmpFile = (0, _toConsumableArray2.default)(e.target.files);\n      var compress = new Compress();\n      compress.compress(tmpFile, {\n        size: 4,\n        // the max size in MB, defaults to 2MB\n        quality: 0.6,\n        // the quality of the image, max is 1,\n        maxWidth: 1920,\n        // the max width of the output image, defaults to 1920px\n        maxHeight: 1920,\n        // the max height of the output image, defaults to 1920px\n        resize: true // defaults to true, set false if you do not want to resize the image width and height\n\n      }).then(function (data) {\n        data.forEach(function (obj) {\n          var img1 = obj;\n          var base64str = img1.data;\n          var imgExt = img1.ext;\n          _this.selectedFile = Compress.convertBase64ToFile(base64str, imgExt), obj.alt.split(\".\")[0];\n        });\n      });\n    },\n    savePatientImage: function (event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      var vm = this;\n\n      if (!!vm.selectedFile && result) {\n        //const storageRef = firebase.storage().ref(`${this.imageData.name}`).put(vm.imgUrl);\n        var storageRef = firebase.storage().ref(\"patient\" + result).put(vm.selectedFile);\n        storageRef.on(\"state_changed\", function (snapshot) {\n          _this2.uploadValue = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        }, function (error) {\n          console.log(error.message);\n        }, function () {\n          _this2.uploadValue = 100;\n          storageRef.snapshot.ref.getDownloadURL().then(function (url) {\n            Meteor.call(\"updatePosProductImage\", result, url, Constants.secret, function (err, result) {\n              if (err) {\n                console.log(err.message);\n              }\n\n              vm.selectedFile = \"\";\n            });\n          });\n        });\n      }\n    }\n  },\n  created: function () {},\n  computed: {}\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/cosmetic/imports/vue/ui/patientImage.vue"],"names":["firebase","module","link","v","Compress","require","exportDefault","meteor","mounted","data","uploadValue","selectedFile","imgUrl","watch","methods","onFileSelected","e","vm","window","URL","createObjectURL","target","files","tmpFile","compress","size","quality","maxWidth","maxHeight","resize","then","forEach","obj","img1","base64str","imgExt","ext","convertBase64ToFile","alt","split","savePatientImage","event","preventDefault","result","storageRef","storage","ref","put","on","snapshot","bytesTransferred","totalBytes","error","console","log","message","getDownloadURL","url","Meteor","call","Constants","secret","err","created","computed"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport firebase from 'firebase';\n\nconst Compress = require('compress.js')\nexport default {\n  meteor: {},\n  mounted() {\n\n  },\n  data() {\n    return {\n      uploadValue: 0,\n      selectedFile: '',\n      imgUrl: \"\"\n    }\n  },\n  watch: {},\n  methods: {\n    onFileSelected(e) {\n      let vm = this;\n      this.imgUrl = window.URL.createObjectURL(e.target.files[0]);\n      /* Meteor.setTimeout(function () {\n         vm.onUpload();\n       }, 500);*/\n      let tmpFile = [...e.target.files];\n      const compress = new Compress();\n      compress.compress(tmpFile, {\n        size: 4, // the max size in MB, defaults to 2MB\n        quality: 0.6, // the quality of the image, max is 1,\n        maxWidth: 1920, // the max width of the output image, defaults to 1920px\n        maxHeight: 1920, // the max height of the output image, defaults to 1920px\n        resize: true // defaults to true, set false if you do not want to resize the image width and height\n      }).then((data) => {\n        data.forEach((obj) => {\n          let img1 = obj;\n          let base64str = img1.data;\n          let imgExt = img1.ext;\n          this.selectedFile = Compress.convertBase64ToFile(base64str, imgExt), obj.alt.split(\".\")[0];\n        })\n      })\n    },\n\n\n    savePatientImage(event) {\n      event.preventDefault();\n      let vm = this;\n      if (!!vm.selectedFile && result) {\n        //const storageRef = firebase.storage().ref(`${this.imageData.name}`).put(vm.imgUrl);\n\n        const storageRef = firebase.storage().ref(\"patient\" + result).put(vm.selectedFile);\n        storageRef.on(`state_changed`, snapshot => {\n              this.uploadValue = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            }, error => {\n              console.log(error.message)\n            },\n            () => {\n              this.uploadValue = 100;\n              storageRef.snapshot.ref.getDownloadURL().then((url) => {\n                Meteor.call(\"updatePosProductImage\", result, url, Constants.secret, (err, result) => {\n                  if (err) {\n                    console.log(err.message);\n                  }\n                  vm.selectedFile = \"\";\n                })\n              });\n            }\n        );\n      }\n\n    },\n\n  },\n  created() {\n\n  },\n  computed: {}\n}\n"]},"sourceType":"script","hash":"c77c8d251e98cf3a76fc06bb81dc38da2970d780"}
