{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/cosmetic","root":"/home/snr/Desktop/Project/cosmetic","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue"}},"code":"var module1 = module;\nvar XLSX;\nmodule1.link(\"xlsx\", {\n  \"default\": function (v) {\n    XLSX = v;\n  }\n}, 0);\nmodule1.link(\"element-ui\");\nmodule1.exportDefault({\n  name: \"ImportFile\",\n  data: function () {\n    var _this = this;\n\n    return {\n      rawData: [],\n\n      /*currentUser: this.$store.state.currentUser,\n      currentModule: this.$store.state.currentModule,\n      */\n      //test\n      testImportLoading: false,\n      testImport: {\n        fileName: '',\n        file: ''\n      },\n      //rules\n      rules: {\n        testImportFileName: [function (v) {\n          return !!v || _this.$t('fileIsRequired');\n        }]\n      }\n    };\n  },\n  methods: {\n    handlePreview: function (file) {\n      console.log(\"Preview\");\n      console.log(file);\n    },\n    handleSuccess: function (respond, file, raw) {\n      console.log(\"Success\");\n      console.log(respond);\n      console.log(file);\n      console.log(raw);\n      this.testImport.file = raw;\n      this.testImport.fileName = file.name;\n      this.submitTestImport(file);\n    },\n    handleBeforeUpload: function (file) {\n      console.log(\"BeforeUpload\");\n      console.log(file);\n      this.testImport.file = file;\n      this.testImport.fileName = file.name;\n    },\n    pickTestFile: function () {\n      this.$refs.testImportFile.click();\n    },\n    onTestFilePicked: function (e) {\n      var files = e.target.files;\n\n      if (files[0] !== undefined) {\n        var matchExtension = files[0].name.match(/xlsx/g);\n\n        if (!matchExtension) {\n          // this.$toaster.error(this.$t('fileTypeMustBeXlsx'));\n          this.testImport.file = [];\n          this.testImport.fileName = '';\n        } else {\n          this.testImport.fileName = files[0].name;\n          this.testImport.file = files[0];\n        }\n      } else {\n        this.testImport.fileName = '';\n        this.testImport.file = null;\n      }\n    },\n    submitTestImport: function (file) {\n      var _this2 = this;\n\n      this.testImportLoading = true; //const {file} = this.testImport;\n\n      setTimeout(function () {\n        _this2.readDataFromFile({\n          file: file,\n          onFileRead: function (docs) {\n            return console.log(docs);\n          }\n        });\n        /*this.readDataFromFile({\n            file,\n            onFileRead: (docs) => this.uploadData({\n                methodName: 'sam_importTest', docs,\n                error: () => {\n                    this.testImportLoading = false;\n                    this.testImport.fileName = '';\n                    this.testImport.file = null;\n                },\n                success: () => {\n                    this.testImportLoading = false;\n                    this.testImport.fileName = '';\n                    this.testImport.file = null;\n                }\n            })\n        })*/\n\n      }, 500);\n    },\n\n    /*binaryDecode(data) {\n        let ret = '';\n        if (data) {\n            let byteArray = new Uint8Array(data);\n            for (let i = 0; i < data.byteLength; i++) {\n                ret = ret + String.fromCharCode(byteArray[i]);\n            }\n        }\n        return ret;\n    },*/\n    //\n    uploadData: function (_ref) {\n      var methodName = _ref.methodName,\n          docs = _ref.docs,\n          error = _ref.error,\n          success = _ref.success;\n      this.rawData = docs;\n      /*Meteor.call(methodName, {userId: this.currentUser._id, docs: docs, module: this.currentModule}, (err, res) => {\n        if (!err) {\n          this.$toaster.success('បញ្ជូនរួចរាល់');\n          success();\n        } else {\n          this.$toaster.error(err.message);\n          error();\n        }\n      });*/\n    },\n    fixdata: function (data) {\n      var o = \"\",\n          l = 0,\n          w = 10240;\n\n      for (l; l < data.byteLength / w; ++l) {\n        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));\n      }\n\n      o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\n      return o;\n    },\n    readDataFromFile: function (_ref2) {\n      var file = _ref2.file,\n          onFileRead = _ref2.onFileRead;\n\n      /*let reader = new FileReader();\n      reader.onload = (val) => {\n          let results,\n              data = val.target.result,\n              fixedData = this.fixdata(data),\n              workbook = XLSX.read(btoa(fixedData), {type: \"base64\"}),\n              firstSheetName = workbook.SheetNames[0],\n              worksheet = workbook.Sheets[firstSheetName];\n          results = XLSX.utils.sheet_to_json(worksheet);\n          onFileRead(results);\n      };\n      reader.readAsArrayBuffer(file);*/\n      var reader = new FileReader();\n\n      reader.onload = function (event) {\n        // NOTE: event.target point to FileReader\n        var contents = event.target.result;\n        var lines = contents.split('\\n'); //////\n\n        document.getElementById('container').innerHTML = contents;\n      };\n\n      reader.readAsText(file);\n    },\n    get_header_row: function (sheet) {\n      var headers = [],\n          range = XLSX.utils.decode_range(sheet[\"!ref\"]);\n      var C,\n          R = range.s.r;\n      /* start in the first row */\n\n      for (C = range.s.c; C <= range.e.c; ++C) {\n        /* walk every column in the range */\n        var cell = sheet[XLSX.utils.encode_cell({\n          c: C,\n          r: R\n        })];\n        /* find the cell in the first row */\n\n        var hdr = \"UNKNOWN \" + C; // <-- replace with your desired default\n\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n        headers.push(hdr);\n      }\n\n      return headers;\n    },\n    workbook_to_json: function (workbook) {\n      var result = {};\n      workbook.SheetNames.forEach(function (sheetName) {\n        var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n\n        if (roa.length > 0) {\n          result[sheetName] = roa;\n        }\n      });\n      return result;\n    }\n  },\n  watch: {\n    'testImport.fileName': function (val) {\n      if (!val) {\n        this.testImport.file = null;\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue"],"names":["module1","module","XLSX","link","v","exportDefault","name","data","rawData","testImportLoading","testImport","fileName","file","rules","testImportFileName","$t","methods","handlePreview","console","log","handleSuccess","respond","raw","submitTestImport","handleBeforeUpload","pickTestFile","$refs","testImportFile","click","onTestFilePicked","e","files","target","undefined","matchExtension","match","setTimeout","readDataFromFile","onFileRead","docs","uploadData","methodName","error","success","fixdata","o","l","w","byteLength","String","fromCharCode","apply","Uint8Array","slice","reader","FileReader","onload","event","contents","result","lines","split","document","getElementById","innerHTML","readAsText","get_header_row","sheet","headers","range","utils","decode_range","C","R","s","r","c","cell","encode_cell","hdr","t","format_cell","push","workbook_to_json","workbook","SheetNames","forEach","sheetName","roa","sheet_to_row_object_array","Sheets","length","watch","val"],"mappings":"AAAA,IAAMA,OAAO,GAACC,MAAd;AAAqB,IAAIC,IAAJ;AAASF,OAAO,CAACG,IAAR,CAAa,MAAb,EAAoB;AAAA,uBAASC,CAAT,EAAW;AAACF,IAAAA,IAAI,GAACE,CAAL;AAAO;AAAnB,CAApB,EAAyC,CAAzC;AAA4CJ,OAAO,CAACG,IAAR,CAAa,YAAb;AAA1EH,OAAO,CAACK,aAAR,CAwDe;AACXC,EAAAA,IAAI,EAAE,YADK;AAEXC,EAAAA,IAFW,cAEJ;AAAA;;AACH,WAAO;AACHC,MAAAA,OAAO,EAAE,EADN;;AAEH;;;AAEE;AACFC,MAAAA,iBAAiB,EAAE,KALhB;AAMHC,MAAAA,UAAU,EAAE;AACRC,QAAAA,QAAQ,EAAE,EADF;AAERC,QAAAA,IAAI,EAAE;AAFE,OANT;AAUH;AACAC,MAAAA,KAAK,EAAE;AACHC,QAAAA,kBAAkB,EAAE,CAAC,UAAAV,CAAC;AAAA,iBAAI,CAAC,CAACA,CAAF,IAAO,KAAI,CAACW,EAAL,CAAQ,gBAAR,CAAX;AAAA,SAAF;AADjB;AAXJ,KAAP;AAeH,GAlBU;AAmBXC,EAAAA,OAAO,EAAE;AACLC,IAAAA,aADK,YACSL,IADT,EACe;AAChBM,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACH,KAJI;AAKLQ,IAAAA,aALK,YAKSC,OALT,EAKkBT,IALlB,EAKwBU,GALxB,EAK6B;AAC9BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,WAAKZ,UAAL,CAAgBE,IAAhB,GAAuBU,GAAvB;AACA,WAAKZ,UAAL,CAAgBC,QAAhB,GAA2BC,IAAI,CAACN,IAAhC;AACA,WAAKiB,gBAAL,CAAsBX,IAAtB;AAEH,KAdI;AAeLY,IAAAA,kBAfK,YAecZ,IAfd,EAeoB;AACrBM,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,WAAKF,UAAL,CAAgBE,IAAhB,GAAuBA,IAAvB;AACA,WAAKF,UAAL,CAAgBC,QAAhB,GAA2BC,IAAI,CAACN,IAAhC;AACH,KApBI;AAsBLmB,IAAAA,YAtBK,cAsBU;AACX,WAAKC,KAAL,CAAWC,cAAX,CAA0BC,KAA1B;AACH,KAxBI;AAyBLC,IAAAA,gBAzBK,YAyBYC,CAzBZ,EAyBe;AAChB,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;;AACA,UAAIA,KAAK,CAAC,CAAD,CAAL,KAAaE,SAAjB,EAA4B;AACxB,YAAMC,cAAc,GAAGH,KAAK,CAAC,CAAD,CAAL,CAASzB,IAAT,CAAc6B,KAAd,CAAoB,OAApB,CAAvB;;AACA,YAAI,CAACD,cAAL,EAAqB;AACjB;AACA,eAAKxB,UAAL,CAAgBE,IAAhB,GAAuB,EAAvB;AACA,eAAKF,UAAL,CAAgBC,QAAhB,GAA2B,EAA3B;AACH,SAJD,MAIO;AACH,eAAKD,UAAL,CAAgBC,QAAhB,GAA2BoB,KAAK,CAAC,CAAD,CAAL,CAASzB,IAApC;AACA,eAAKI,UAAL,CAAgBE,IAAhB,GAAuBmB,KAAK,CAAC,CAAD,CAA5B;AACH;AACJ,OAVD,MAUO;AACH,aAAKrB,UAAL,CAAgBC,QAAhB,GAA2B,EAA3B;AACA,aAAKD,UAAL,CAAgBE,IAAhB,GAAuB,IAAvB;AACH;AACJ,KAzCI;AA0CLW,IAAAA,gBA1CK,YA0CYX,IA1CZ,EA0CkB;AAAA;;AACnB,WAAKH,iBAAL,GAAyB,IAAzB,CADmB,CAEnB;;AACA2B,MAAAA,UAAU,CAAC,YAAM;AACb,QAAA,MAAI,CAACC,gBAAL,CAAsB;AAClBzB,UAAAA,IAAI,EAAJA,IADkB;AAElB0B,UAAAA,UAAU,EAAE,UAACC,IAAD;AAAA,mBAAUrB,OAAO,CAACC,GAAR,CAAYoB,IAAZ,CAAV;AAAA;AAFM,SAAtB;AAKA;;;;;;;;;;;;;;;;;AAgBH,OAtBS,EAsBP,GAtBO,CAAV;AAuBH,KApEI;;AAqEL;;;;;;;;;;AAUA;AACAC,IAAAA,UAhFK,kBAgF0C;AAAA,UAAnCC,UAAmC,QAAnCA,UAAmC;AAAA,UAAvBF,IAAuB,QAAvBA,IAAuB;AAAA,UAAjBG,KAAiB,QAAjBA,KAAiB;AAAA,UAAVC,OAAU,QAAVA,OAAU;AAC3C,WAAKnC,OAAL,GAAe+B,IAAf;AACA;;;;;;;;;AASH,KA3FI;AA6FLK,IAAAA,OA7FK,YA6FGrC,IA7FH,EA6FS;AACV,UAAIsC,CAAC,GAAG,EAAR;AAAA,UACIC,CAAC,GAAG,CADR;AAAA,UAEIC,CAAC,GAAG,KAFR;;AAGA,WAAKD,CAAL,EAAQA,CAAC,GAAGvC,IAAI,CAACyC,UAAL,GAAkBD,CAA9B,EAAiC,EAAED,CAAnC;AACID,QAAAA,CAAC,IAAII,MAAM,CAACC,YAAP,CAAoBC,KAApB,CACD,IADC,EAED,IAAIC,UAAJ,CAAe7C,IAAI,CAAC8C,KAAL,CAAWP,CAAC,GAAGC,CAAf,EAAkBD,CAAC,GAAGC,CAAJ,GAAQA,CAA1B,CAAf,CAFC,CAAL;AADJ;;AAKAF,MAAAA,CAAC,IAAII,MAAM,CAACC,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgC,IAAIC,UAAJ,CAAe7C,IAAI,CAAC8C,KAAL,CAAWP,CAAC,GAAGC,CAAf,CAAf,CAAhC,CAAL;AACA,aAAOF,CAAP;AACH,KAxGI;AA0GLR,IAAAA,gBA1GK,mBA0GgC;AAAA,UAAnBzB,IAAmB,SAAnBA,IAAmB;AAAA,UAAb0B,UAAa,SAAbA,UAAa;;AACjC;;;;;;;;;;;;AAaA,UAAIgB,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,KAAD,EAAW;AACvB;AACA,YAAIC,QAAQ,GAAGD,KAAK,CAACzB,MAAN,CAAa2B,MAA5B;AACA,YAAIC,KAAK,GAAGF,QAAQ,CAACG,KAAT,CAAe,IAAf,CAAZ,CAHuB,CAIvB;;AACAC,QAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,SAArC,GAAiDN,QAAjD;AACH,OAND;;AAQAJ,MAAAA,MAAM,CAACW,UAAP,CAAkBrD,IAAlB;AACH,KAlII;AAoILsD,IAAAA,cApIK,YAoIUC,KApIV,EAoIiB;AAClB,UAAIC,OAAO,GAAG,EAAd;AAAA,UAAkBC,KAAK,GAAGnE,IAAI,CAACoE,KAAL,CAAWC,YAAX,CAAwBJ,KAAK,CAAC,MAAD,CAA7B,CAA1B;AACA,UAAIK,CAAJ;AAAA,UAAOC,CAAC,GAAGJ,KAAK,CAACK,CAAN,CAAQC,CAAnB;AACA;;AACA,WAAKH,CAAC,GAAGH,KAAK,CAACK,CAAN,CAAQE,CAAjB,EAAoBJ,CAAC,IAAIH,KAAK,CAACvC,CAAN,CAAQ8C,CAAjC,EAAoC,EAAEJ,CAAtC,EAAyC;AACrC;AACA,YAAIK,IAAI,GAAGV,KAAK,CAACjE,IAAI,CAACoE,KAAL,CAAWQ,WAAX,CAAuB;AAACF,UAAAA,CAAC,EAAEJ,CAAJ;AAAOG,UAAAA,CAAC,EAAEF;AAAV,SAAvB,CAAD,CAAhB;AACA;;AACA,YAAIM,GAAG,GAAG,aAAaP,CAAvB,CAJqC,CAIX;;AAC1B,YAAIK,IAAI,IAAIA,IAAI,CAACG,CAAjB,EAAoBD,GAAG,GAAG7E,IAAI,CAACoE,KAAL,CAAWW,WAAX,CAAuBJ,IAAvB,CAAN;AACpBT,QAAAA,OAAO,CAACc,IAAR,CAAaH,GAAb;AACH;;AACD,aAAOX,OAAP;AACH,KAjJI;AAmJLe,IAAAA,gBAnJK,YAmJYC,QAnJZ,EAmJsB;AACvB,UAAIzB,MAAM,GAAG,EAAb;AACAyB,MAAAA,QAAQ,CAACC,UAAT,CAAoBC,OAApB,CAA4B,UAAUC,SAAV,EAAqB;AAC7C,YAAIC,GAAG,GAAGtF,IAAI,CAACoE,KAAL,CAAWmB,yBAAX,CAAqCL,QAAQ,CAACM,MAAT,CAAgBH,SAAhB,CAArC,CAAV;;AACA,YAAIC,GAAG,CAACG,MAAJ,GAAa,CAAjB,EAAoB;AAChBhC,UAAAA,MAAM,CAAC4B,SAAD,CAAN,GAAoBC,GAApB;AACH;AACJ,OALD;AAMA,aAAO7B,MAAP;AACH;AA5JI,GAnBE;AAkLXiC,EAAAA,KAAK,EAAE;AACH,yBADG,YACmBC,GADnB,EACwB;AACvB,UAAI,CAACA,GAAL,EAAU;AACN,aAAKnF,UAAL,CAAgBE,IAAhB,GAAuB,IAAvB;AACH;AACJ;AALE;AAlLI,CAxDf","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport XLSX from 'xlsx';\nimport \"element-ui\";\n\nexport default {\n    name: \"ImportFile\",\n    data() {\n        return {\n            rawData: [],\n            /*currentUser: this.$store.state.currentUser,\n            currentModule: this.$store.state.currentModule,\n            *///test\n            testImportLoading: false,\n            testImport: {\n                fileName: '',\n                file: ''\n            },\n            //rules\n            rules: {\n                testImportFileName: [v => !!v || this.$t('fileIsRequired')],\n            },\n        }\n    },\n    methods: {\n        handlePreview(file) {\n            console.log(\"Preview\");\n            console.log(file);\n        },\n        handleSuccess(respond, file, raw) {\n            console.log(\"Success\");\n            console.log(respond);\n            console.log(file);\n            console.log(raw);\n            this.testImport.file = raw;\n            this.testImport.fileName = file.name;\n            this.submitTestImport(file);\n\n        },\n        handleBeforeUpload(file) {\n            console.log(\"BeforeUpload\");\n            console.log(file);\n            this.testImport.file = file;\n            this.testImport.fileName = file.name;\n        },\n\n        pickTestFile() {\n            this.$refs.testImportFile.click();\n        },\n        onTestFilePicked(e) {\n            const files = e.target.files;\n            if (files[0] !== undefined) {\n                const matchExtension = files[0].name.match(/xlsx/g);\n                if (!matchExtension) {\n                    // this.$toaster.error(this.$t('fileTypeMustBeXlsx'));\n                    this.testImport.file = [];\n                    this.testImport.fileName = '';\n                } else {\n                    this.testImport.fileName = files[0].name;\n                    this.testImport.file = files[0];\n                }\n            } else {\n                this.testImport.fileName = '';\n                this.testImport.file = null;\n            }\n        },\n        submitTestImport(file) {\n            this.testImportLoading = true;\n            //const {file} = this.testImport;\n            setTimeout(() => {\n                this.readDataFromFile({\n                    file,\n                    onFileRead: (docs) => console.log(docs)\n                })\n\n                /*this.readDataFromFile({\n                    file,\n                    onFileRead: (docs) => this.uploadData({\n                        methodName: 'sam_importTest', docs,\n                        error: () => {\n                            this.testImportLoading = false;\n                            this.testImport.fileName = '';\n                            this.testImport.file = null;\n                        },\n                        success: () => {\n                            this.testImportLoading = false;\n                            this.testImport.fileName = '';\n                            this.testImport.file = null;\n                        }\n                    })\n                })*/\n            }, 500);\n        },\n        /*binaryDecode(data) {\n            let ret = '';\n            if (data) {\n                let byteArray = new Uint8Array(data);\n                for (let i = 0; i < data.byteLength; i++) {\n                    ret = ret + String.fromCharCode(byteArray[i]);\n                }\n            }\n            return ret;\n        },*/\n        //\n        uploadData({methodName, docs, error, success}) {\n            this.rawData = docs;\n            /*Meteor.call(methodName, {userId: this.currentUser._id, docs: docs, module: this.currentModule}, (err, res) => {\n              if (!err) {\n                this.$toaster.success('បញ្ជូនរួចរាល់');\n                success();\n              } else {\n                this.$toaster.error(err.message);\n                error();\n              }\n            });*/\n        }\n        ,\n        fixdata(data) {\n            let o = \"\",\n                l = 0,\n                w = 10240;\n            for (l; l < data.byteLength / w; ++l)\n                o += String.fromCharCode.apply(\n                    null,\n                    new Uint8Array(data.slice(l * w, l * w + w))\n                );\n            o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\n            return o;\n        }\n        ,\n        readDataFromFile({file, onFileRead}) {\n            /*let reader = new FileReader();\n            reader.onload = (val) => {\n                let results,\n                    data = val.target.result,\n                    fixedData = this.fixdata(data),\n                    workbook = XLSX.read(btoa(fixedData), {type: \"base64\"}),\n                    firstSheetName = workbook.SheetNames[0],\n                    worksheet = workbook.Sheets[firstSheetName];\n                results = XLSX.utils.sheet_to_json(worksheet);\n                onFileRead(results);\n            };\n            reader.readAsArrayBuffer(file);*/\n\n            let reader = new FileReader();\n            reader.onload = (event) => {\n                // NOTE: event.target point to FileReader\n                let contents = event.target.result;\n                let lines = contents.split('\\n');\n                //////\n                document.getElementById('container').innerHTML = contents;\n            };\n\n            reader.readAsText(file);\n        }\n        ,\n        get_header_row(sheet) {\n            let headers = [], range = XLSX.utils.decode_range(sheet[\"!ref\"]);\n            let C, R = range.s.r;\n            /* start in the first row */\n            for (C = range.s.c; C <= range.e.c; ++C) {\n                /* walk every column in the range */\n                let cell = sheet[XLSX.utils.encode_cell({c: C, r: R})];\n                /* find the cell in the first row */\n                let hdr = \"UNKNOWN \" + C; // <-- replace with your desired default\n                if (cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n                headers.push(hdr);\n            }\n            return headers;\n        }\n        ,\n        workbook_to_json(workbook) {\n            let result = {};\n            workbook.SheetNames.forEach(function (sheetName) {\n                let roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n                if (roa.length > 0) {\n                    result[sheetName] = roa;\n                }\n            });\n            return result;\n        }\n        ,\n    },\n    watch: {\n        'testImport.fileName'(val) {\n            if (!val) {\n                this.testImport.file = null;\n            }\n        }\n    }\n}\n"]},"sourceType":"script","hash":"abb32a2aa073f34baf532fb9b842eaa38b716fcc"}
