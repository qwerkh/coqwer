{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/cosmetic","root":"/home/snr/Desktop/Project/cosmetic","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue"}},"code":"var module1 = module;\nvar XLSX;\nmodule1.link(\"xlsx\", {\n  \"default\": function (v) {\n    XLSX = v;\n  }\n}, 0);\nmodule1.exportDefault({\n  name: \"ImportFile\",\n  data: function () {\n    var _this = this;\n\n    return {\n      rawData: [],\n\n      /*currentUser: this.$store.state.currentUser,\n      currentModule: this.$store.state.currentModule,\n      */\n      //student\n      studentImportLoading: false,\n      studentImport: {\n        fileName: '',\n        file: ''\n      },\n      //rules\n      rules: {\n        studentImportFileName: [function (v) {\n          return !!v || _this.$t('fileIsRequired');\n        }]\n      }\n    };\n  },\n  methods: {\n    pickStudentFile: function () {\n      this.$refs.studentImportFile.click();\n    },\n    onStudentFilePicked: function (e) {\n      var files = e.target.files;\n\n      if (files[0] !== undefined) {\n        var matchExtension = files[0].name.match(/xlsx/g);\n\n        if (!matchExtension) {\n          // this.$toaster.error(this.$t('fileTypeMustBeXlsx'));\n          this.studentImport.file = [];\n          this.studentImport.fileName = '';\n        } else {\n          this.studentImport.fileName = files[0].name;\n          this.studentImport.file = files[0];\n        }\n      } else {\n        this.studentImport.fileName = '';\n        this.studentImport.file = null;\n      }\n    },\n    submitStudentImport: function () {\n      var _this2 = this;\n\n      this.studentImportLoading = true;\n      var file = this.studentImport.file;\n      setTimeout(function () {\n        _this2.readDataFromFile({\n          file: file,\n          onFileRead: function (docs) {\n            return _this2.uploadData({\n              methodName: 'sam_importStudent',\n              docs: docs,\n              error: function () {\n                _this2.studentImportLoading = false;\n                _this2.studentImport.fileName = '';\n                _this2.studentImport.file = null;\n              },\n              success: function () {\n                _this2.studentImportLoading = false;\n                _this2.studentImport.fileName = '';\n                _this2.studentImport.file = null;\n              }\n            });\n          }\n        });\n      }, 500);\n    },\n    //\n    uploadData: function (_ref) {\n      var methodName = _ref.methodName,\n          docs = _ref.docs,\n          error = _ref.error,\n          success = _ref.success;\n      this.rawData = docs;\n      /*Meteor.call(methodName, {userId: this.currentUser._id, docs: docs, module: this.currentModule}, (err, res) => {\n        if (!err) {\n          this.$toaster.success('បញ្ជូនរួចរាល់');\n          success();\n        } else {\n          this.$toaster.error(err.message);\n          error();\n        }\n      });*/\n    },\n    fixdata: function (data) {\n      var o = \"\",\n          l = 0,\n          w = 10240;\n\n      for (l; l < data.byteLength / w; ++l) {\n        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));\n      }\n\n      o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\n      return o;\n    },\n    readDataFromFile: function (_ref2) {\n      var _this3 = this;\n\n      var file = _ref2.file,\n          onFileRead = _ref2.onFileRead;\n      var reader = new FileReader();\n\n      reader.onload = function (val) {\n        var results,\n            data = val.target.result,\n            fixedData = _this3.fixdata(data),\n            workbook = XLSX.read(btoa(fixedData), {\n          type: \"base64\"\n        }),\n            firstSheetName = workbook.SheetNames[0],\n            worksheet = workbook.Sheets[firstSheetName];\n\n        results = XLSX.utils.sheet_to_json(worksheet);\n        onFileRead(results);\n      };\n\n      reader.readAsArrayBuffer(file);\n    },\n    get_header_row: function (sheet) {\n      var headers = [],\n          range = XLSX.utils.decode_range(sheet[\"!ref\"]);\n      var C,\n          R = range.s.r;\n      /* start in the first row */\n\n      for (C = range.s.c; C <= range.e.c; ++C) {\n        /* walk every column in the range */\n        var cell = sheet[XLSX.utils.encode_cell({\n          c: C,\n          r: R\n        })];\n        /* find the cell in the first row */\n\n        var hdr = \"UNKNOWN \" + C; // <-- replace with your desired default\n\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n        headers.push(hdr);\n      }\n\n      return headers;\n    },\n    workbook_to_json: function (workbook) {\n      var result = {};\n      workbook.SheetNames.forEach(function (sheetName) {\n        var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n\n        if (roa.length > 0) {\n          result[sheetName] = roa;\n        }\n      });\n      return result;\n    }\n  },\n  watch: {\n    'studentImport.fileName': function (val) {\n      if (!val) {\n        this.studentImport.file = null;\n      }\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue"],"names":["module1","module","XLSX","link","v","exportDefault","name","data","rawData","studentImportLoading","studentImport","fileName","file","rules","studentImportFileName","$t","methods","pickStudentFile","$refs","studentImportFile","click","onStudentFilePicked","e","files","target","undefined","matchExtension","match","submitStudentImport","setTimeout","readDataFromFile","onFileRead","docs","uploadData","methodName","error","success","fixdata","o","l","w","byteLength","String","fromCharCode","apply","Uint8Array","slice","reader","FileReader","onload","val","results","result","fixedData","workbook","read","btoa","type","firstSheetName","SheetNames","worksheet","Sheets","utils","sheet_to_json","readAsArrayBuffer","get_header_row","sheet","headers","range","decode_range","C","R","s","r","c","cell","encode_cell","hdr","t","format_cell","push","workbook_to_json","forEach","sheetName","roa","sheet_to_row_object_array","length","watch"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport XLSX from 'xlsx';\n\nexport default {\n  name: \"ImportFile\",\n  data() {\n    return {\n      rawData: [],\n      /*currentUser: this.$store.state.currentUser,\n      currentModule: this.$store.state.currentModule,\n      *///student\n      studentImportLoading: false,\n      studentImport: {\n        fileName: '',\n        file: ''\n      },\n      //rules\n      rules: {\n        studentImportFileName: [v => !!v || this.$t('fileIsRequired')],\n      },\n    }\n  },\n  methods: {\n    pickStudentFile() {\n      this.$refs.studentImportFile.click();\n    },\n    onStudentFilePicked(e) {\n      const files = e.target.files;\n      if (files[0] !== undefined) {\n        const matchExtension = files[0].name.match(/xlsx/g);\n        if (!matchExtension) {\n          // this.$toaster.error(this.$t('fileTypeMustBeXlsx'));\n          this.studentImport.file = [];\n          this.studentImport.fileName = '';\n        } else {\n          this.studentImport.fileName = files[0].name;\n          this.studentImport.file = files[0];\n        }\n      } else {\n        this.studentImport.fileName = '';\n        this.studentImport.file = null;\n      }\n    },\n    submitStudentImport() {\n      this.studentImportLoading = true;\n      const {file} = this.studentImport;\n      setTimeout(() => {\n        this.readDataFromFile({\n          file,\n          onFileRead: (docs) => this.uploadData({\n            methodName: 'sam_importStudent', docs,\n            error: () => {\n              this.studentImportLoading = false;\n              this.studentImport.fileName = '';\n              this.studentImport.file = null;\n            },\n            success: () => {\n              this.studentImportLoading = false;\n              this.studentImport.fileName = '';\n              this.studentImport.file = null;\n            }\n          })\n        })\n      }, 500);\n    },\n    //\n    uploadData({methodName, docs, error, success}) {\n      this.rawData = docs;\n      /*Meteor.call(methodName, {userId: this.currentUser._id, docs: docs, module: this.currentModule}, (err, res) => {\n        if (!err) {\n          this.$toaster.success('បញ្ជូនរួចរាល់');\n          success();\n        } else {\n          this.$toaster.error(err.message);\n          error();\n        }\n      });*/\n    },\n    fixdata(data) {\n      let o = \"\",\n        l = 0,\n        w = 10240;\n      for (l; l < data.byteLength / w; ++l)\n        o += String.fromCharCode.apply(\n          null,\n          new Uint8Array(data.slice(l * w, l * w + w))\n        );\n      o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\n      return o;\n    },\n    readDataFromFile({file, onFileRead}) {\n      let reader = new FileReader();\n      reader.onload = (val) => {\n        let results,\n          data = val.target.result,\n          fixedData = this.fixdata(data),\n          workbook = XLSX.read(btoa(fixedData), {type: \"base64\"}),\n          firstSheetName = workbook.SheetNames[0],\n          worksheet = workbook.Sheets[firstSheetName];\n        results = XLSX.utils.sheet_to_json(worksheet);\n        onFileRead(results);\n      };\n      reader.readAsArrayBuffer(file);\n    },\n    get_header_row(sheet) {\n      let headers = [], range = XLSX.utils.decode_range(sheet[\"!ref\"]);\n      let C, R = range.s.r;\n      /* start in the first row */\n      for (C = range.s.c; C <= range.e.c; ++C) {\n        /* walk every column in the range */\n        let cell = sheet[XLSX.utils.encode_cell({c: C, r: R})];\n        /* find the cell in the first row */\n        let hdr = \"UNKNOWN \" + C; // <-- replace with your desired default\n        if (cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n        headers.push(hdr);\n      }\n      return headers;\n    },\n    workbook_to_json(workbook) {\n      let result = {};\n      workbook.SheetNames.forEach(function (sheetName) {\n        let roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n        if (roa.length > 0) {\n          result[sheetName] = roa;\n        }\n      });\n      return result;\n    },\n  },\n  watch: {\n    'studentImport.fileName'(val) {\n      if (!val) {\n        this.studentImport.file = null;\n      }\n    }\n  }\n}\n"]},"sourceType":"script","hash":"2a2d688a1a9787e7c4ef536e3622eab5dd1fbed4"}
