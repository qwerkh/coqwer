{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/weightTestReport.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/weightTestReport.vue","filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/weightTestReport.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/cosmetic","root":"/home/snr/Desktop/Project/cosmetic","plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"transform-modules-commonjs","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]},"ClassPrivateMethod":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/weightTestReport.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/weightTestReport.vue"}},"code":"module.exportDefault({\n  data: function () {\n    return {\n      weightTestReport: {\n        roleBranchOptionsModel: [],\n        roleAreaOptionsModel: [],\n        dateAs: \"\"\n      },\n      roleBranchOptions: [],\n      roleAreaOptions: [],\n      dateAs: \"\",\n      activeName: \"1\",\n      weightTestData: {},\n      loading: false,\n      companyName: \"\",\n      companyEnName: \"\",\n      addressName: \"\",\n      branchHeader: \"All\",\n      dateHeader: \"All\",\n      printLoading: false\n    };\n  },\n  methods: {\n    fetchBranchOption: function () {\n      var _this = this;\n\n      Meteor.call(\"fetchRolesBranch\", Meteor.userId(), function (err, result) {\n        _this.roleBranchOptions = result;\n      });\n    },\n    fetchAreaOption: function (val) {\n      var _this2 = this;\n\n      Meteor.call(\"fetchRolesAreaByMultiRoleBranch\", Meteor.userId(), val, function (err, result) {\n        _this2.roleAreaOptions = result;\n      });\n    },\n    handleRunReport: function () {\n      var _this3 = this;\n\n      var params = {};\n      params._id = FlowRouter.getParam(\"weightTestId\");\n      Meteor.call('giveMeWeightTestReport', params, function (err, result) {\n        if (!err) {\n          _this3.weightTestData = result;\n          console.log(result);\n        }\n\n        _this3.loading = false;\n      });\n    },\n    getCompany: function () {\n      var _this4 = this;\n\n      Meteor.call(\"getCompany\", function (err, result) {\n        if (!err) {\n          _this4.companyName = result.khName;\n          _this4.companyEnName = result.enName;\n          _this4.addressName = result.khAddress;\n        }\n      });\n    },\n    PrintReport: function () {\n      window.print();\n    }\n  },\n  watch: {\n    \"weightTestReport.roleBranchOptionsModel\": function (val) {\n      this.fetchAreaOption(val);\n    },\n    \"weightTestReport.roleAreaOptionsModel\": function (val) {\n      this.fetchPatientOption(val);\n    }\n  },\n  created: function () {\n    this.getCompany();\n    this.handleRunReport();\n  },\n  computed: {\n    dataExist: function () {\n      return this.weightTestData.data > 0;\n    }\n  }\n});","map":{"version":3,"sources":["/home/snr/Desktop/Project/cosmetic/imports/vue/ui/weightTestReport.vue"],"names":["module","exportDefault","data","weightTestReport","roleBranchOptionsModel","roleAreaOptionsModel","dateAs","roleBranchOptions","roleAreaOptions","activeName","weightTestData","loading","companyName","companyEnName","addressName","branchHeader","dateHeader","printLoading","methods","fetchBranchOption","Meteor","call","userId","err","result","fetchAreaOption","val","handleRunReport","params","_id","FlowRouter","getParam","console","log","getCompany","khName","enName","khAddress","PrintReport","window","print","watch","fetchPatientOption","created","computed","dataExist"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    data() {\n        return {\n            weightTestReport: {\n                roleBranchOptionsModel: [],\n                roleAreaOptionsModel: [],\n                dateAs: \"\"\n            },\n\n            roleBranchOptions: [],\n            roleAreaOptions: [],\n\n            dateAs: \"\",\n            activeName: \"1\",\n            weightTestData: {},\n            loading: false,\n\n            companyName: \"\",\n            companyEnName: \"\",\n            addressName: \"\",\n\n            branchHeader: \"All\",\n            dateHeader: \"All\",\n\n            printLoading: false,\n        }\n    },\n    methods: {\n        fetchBranchOption() {\n            Meteor.call(\"fetchRolesBranch\", Meteor.userId(), (err, result) => {\n                this.roleBranchOptions = result;\n            })\n        },\n        fetchAreaOption(val) {\n            Meteor.call(\"fetchRolesAreaByMultiRoleBranch\", Meteor.userId(), val, (err, result) => {\n                this.roleAreaOptions = result;\n            })\n        },\n\n        handleRunReport() {\n            let params = {};\n            params._id = FlowRouter.getParam(\"weightTestId\");\n\n            Meteor.call('giveMeWeightTestReport', params, (err, result) => {\n                if (!err) {\n                    this.weightTestData = result;\n                    console.log(result);\n                }\n                this.loading = false;\n            });\n\n\n        },\n        getCompany() {\n            Meteor.call(\"getCompany\", (err, result) => {\n                if (!err) {\n                    this.companyName = result.khName;\n                    this.companyEnName = result.enName;\n                    this.addressName = result.khAddress;\n                }\n            })\n\n        },\n        PrintReport() {\n            window.print();\n        }\n    },\n    watch: {\n        \"weightTestReport.roleBranchOptionsModel\"(val) {\n            this.fetchAreaOption(val);\n        }\n        ,\n        \"weightTestReport.roleAreaOptionsModel\"(val) {\n            this.fetchPatientOption(val);\n        }\n    },\n    created() {\n        this.getCompany();\n        this.handleRunReport()\n    },\n    computed: {\n        dataExist() {\n            return this.weightTestData.data > 0;\n        }\n    },\n\n}\n"]},"sourceType":"script","hash":"25cd47ad1d89fd9bf69b68ba66de2ff063c9694c"}
