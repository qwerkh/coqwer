{"metadata":{},"options":{"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions",["flow",{}],"nullishCoalescingOperator","nullishCoalescingOperator","optionalChaining","optionalChaining","optionalCatchBinding","optionalCatchBinding","classProperties","classPrivateProperties","classPrivateMethods","classProperties","classPrivateProperties","asyncGenerators","asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}]],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"allowUndeclaredExports":true,"strictMode":false},"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","passPerPreset":false,"envName":"development","cwd":"/home/snr/Desktop/Project/cosmetic","root":"/home/snr/Desktop/Project/cosmetic","plugins":[{"key":"base$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true},"options":{"avoidModernSyntax":true,"enforceStrictMode":false,"dynamicImport":true}},{"key":"transform-runtime","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"version":"7.7.6","helpers":true,"useESModules":false,"corejs":false}},{"key":"syntax-flow","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"syntax-nullish-coalescing-operator","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-nullish-coalescing-operator","visitor":{"_exploded":{},"_verified":{},"LogicalExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-chaining","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-chaining","visitor":{"_exploded":{},"_verified":{},"OptionalCallExpression":{"enter":[null]},"OptionalMemberExpression":{"enter":[null]}},"options":{}},{"key":"syntax-optional-catch-binding","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-optional-catch-binding","visitor":{"_exploded":{},"_verified":{},"CatchClause":{"enter":[null]}},"options":{}},{"key":"syntax-class-properties","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-class-properties","visitor":{"PrivateName":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"syntax-async-generators","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-async-generator-functions","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"syntax-object-rest-spread","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"proposal-object-rest-spread","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ArrayPattern":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-arrow-functions","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoped-functions","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-block-scoping","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-classes","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-computed-properties","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-destructuring","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-for-of","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-literals","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-object-super","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-parameters","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]}},"options":{}},{"key":"transform-shorthand-properties","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-spread","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-sticky-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-template-literals","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"transform-typeof-symbol","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"TSModuleBlock":{"enter":[null]}},"options":{}},{"key":"transform-unicode-regex","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-property-literals","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"transform-flow-strip-types","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ClassPrivateMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"transform-exponentiation-operator","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"ObjectMethod":{"enter":[null],"exit":[null]},"ClassMethod":{"enter":[null],"exit":[null]},"ClassPrivateMethod":{"enter":[null],"exit":[null]},"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]}},"options":{}}],"presets":[],"generatorOpts":{"filename":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue"}},"code":"!function (module1) {\n  var XLSX;\n  module1.link(\"xlsx\", {\n    \"default\": function (v) {\n      XLSX = v;\n    }\n  }, 0);\n  module1.exportDefault({\n    name: \"ImportFile\",\n    data: function () {\n      return {\n        rawData: [],\n        loading: false,\n        searchData: '',\n        isSearching: false,\n        currentPage: 1,\n        currentSize: 10,\n        count: 0,\n        skip: 0,\n        newLoading: true,\n\n        /*currentUser: this.$store.state.currentUser,\n        currentModule: this.$store.state.currentModule,\n        */\n        //test\n        testImportLoading: false,\n        testImport: {\n          fileName: '',\n          file: ''\n        },\n        weightTestData: [],\n        patientId: \"\",\n        disabledRemove: false //rules\n\n        /*rules: {\n            testImportFileName: [v => !!v || this.$t('fileIsRequired')],\n        },*/\n\n      };\n    },\n    methods: {\n      handleSizeChange: function (val) {\n        this.currentSize = val;\n      },\n      handleCurrentChange: function (val) {\n        this.currentPage = val;\n      },\n      printWeightTest: function (data) {\n        FlowRouter.go(\"/co-report/weightTest/\" + data._id + \"/print\");\n      },\n      queryData: _.debounce(function (val, skip, limit) {\n        var _this = this;\n\n        this.newLoading = true;\n        Meteor.call('queryWeightTest', {\n          q: val,\n          filter: this.filter,\n          rolesArea: Session.get('area'),\n          patientId: this.patientId,\n          options: {\n            skip: skip || 0,\n            limit: limit || 10\n          }\n        }, function (err, result) {\n          if (!err) {\n            _this.weightTestData = result.content;\n            _this.count = result.countWeightTest;\n          }\n\n          _this.isSearching = false;\n          _this.newLoading = false;\n        });\n      }, 300),\n      handlePreview: function (file) {},\n      handleSuccess: function (respond, file, fileList) {\n        this.submitTestImport(file.raw);\n      },\n      handleBeforeUpload: function (file) {},\n      pickTestFile: function () {\n        this.$refs.testImportFile.click();\n      },\n      onTestFilePicked: function (e) {\n        var files = e.target.files;\n\n        if (files[0] !== undefined) {\n          var matchExtension = files[0].name.match(/xlsx/g);\n\n          if (!matchExtension) {\n            // this.$toaster.error(this.$t('fileTypeMustBeXlsx'));\n            this.testImport.file = [];\n            this.testImport.fileName = '';\n          } else {\n            this.testImport.fileName = files[0].name;\n            this.testImport.file = files[0];\n          }\n        } else {\n          this.testImport.fileName = '';\n          this.testImport.file = null;\n        }\n      },\n      submitTestImport: function (file) {\n        var _this2 = this;\n\n        // this.testImportLoading = true;\n        //const {file} = this.testImport;\n        this.testImport.fileName = file.name;\n        setTimeout(function () {\n          _this2.readDataFromFile({\n            file: file,\n            onFileRead: function (docs) {\n              return _this2.insertData({\n                docs: docs,\n                error: function () {\n                  alertify.error(\"Failed to upload file!!\");\n                },\n                success: function () {\n                  _this2.queryData();\n\n                  alertify.success(\"Upload success!!\");\n                }\n              });\n            }\n          });\n          /*this.readDataFromFile({\n              file,\n              onFileRead: (docs) => this.uploadData({\n                  methodName: 'sam_importTest', docs,\n                  error: () => {\n                      this.testImportLoading = false;\n                      this.testImport.fileName = '';\n                      this.testImport.file = null;\n                  },\n                  success: () => {\n                      this.testImportLoading = false;\n                      this.testImport.fileName = '';\n                      this.testImport.file = null;\n                  }\n              })\n          })*/\n\n        }, 500);\n      },\n\n      /*binaryDecode(data) {\n          let ret = '';\n          if (data) {\n              let byteArray = new Uint8Array(data);\n              for (let i = 0; i < data.byteLength; i++) {\n                  ret = ret + String.fromCharCode(byteArray[i]);\n              }\n          }\n          return ret;\n      },*/\n      //\n\n      /*uploadData({methodName, docs, error, success}) {\n          this.rawData = docs;\n          /!*Meteor.call(methodName, {userId: this.currentUser._id, docs: docs, module: this.currentModule}, (err, res) => {\n            if (!err) {\n              this.$toaster.success('បញ្ជូនរួចរាល់');\n              success();\n            } else {\n              this.$toaster.error(err.message);\n              error();\n            }\n          });*!/\n      }*/\n      insertData: function (_ref) {\n        var docs = _ref.docs,\n            error = _ref.error,\n            success = _ref.success;\n        Meteor.call(\"insertWeightTest\", docs, Session.get(\"area\"), this.patientId, this.testImport.fileName, function (err, result) {\n          if (!err) {\n            success();\n          } else {\n            error();\n          }\n        });\n      },\n      fixdata: function (data) {\n        var o = \"\",\n            l = 0,\n            w = 10240;\n\n        for (l; l < data.byteLength / w; ++l) {\n          o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w, l * w + w)));\n        }\n\n        o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\n        return o;\n      },\n      removeWeightTest: function (index, row, rows) {\n        var _this3 = this;\n\n        var vm = this;\n        this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n          confirmButtonText: 'OK',\n          cancelButtonText: 'Cancel',\n          type: 'warning'\n        }).then(function () {\n          Meteor.call(\"removeWeightTest\", row._id, function (err, result) {\n            if (!err) {\n              rows.splice(index, 1);\n              vm.$message({\n                message: \"\\n                    \\u179B\\u17BB\\u1794 \" + row.id + \" : \" + row.testNo + \" \\u1794\\u17B6\\u1793\\u1787\\u17C4\\u1782\\u1787\\u17D0\\u1799\",\n                type: 'success'\n              });\n            } else {\n              vm.$message({\n                type: 'error',\n                message: 'Delete Fialed'\n              });\n            }\n          });\n        }).catch(function () {\n          _this3.$message({\n            type: 'info',\n            message: 'Delete canceled'\n          });\n        });\n      },\n      readDataFromFile: function (_ref2) {\n        var file = _ref2.file,\n            onFileRead = _ref2.onFileRead;\n\n        /*let reader = new FileReader();\n        reader.onload = (val) => {\n            let results,\n                data = val.target.result,\n                fixedData = this.fixdata(data),\n                workbook = XLSX.read(btoa(fixedData), {type: \"base64\"}),\n                firstSheetName = workbook.SheetNames[0],\n                worksheet = workbook.Sheets[firstSheetName];\n            results = XLSX.utils.sheet_to_json(worksheet);\n            onFileRead(results);\n        };\n        reader.readAsArrayBuffer(file);*/\n        var reader = new FileReader();\n\n        reader.onload = function (event) {\n          // NOTE: event.target point to FileReader\n          var contents = event.target.result;\n          var lines = contents.split('\\n'); //////\n          // document.getElementById('container').innerHTML = contents;\n\n          onFileRead(lines);\n        };\n\n        reader.readAsText(file);\n      },\n      get_header_row: function (sheet) {\n        var headers = [],\n            range = XLSX.utils.decode_range(sheet[\"!ref\"]);\n        var C,\n            R = range.s.r;\n        /* start in the first row */\n\n        for (C = range.s.c; C <= range.e.c; ++C) {\n          /* walk every column in the range */\n          var cell = sheet[XLSX.utils.encode_cell({\n            c: C,\n            r: R\n          })];\n          /* find the cell in the first row */\n\n          var hdr = \"UNKNOWN \" + C; // <-- replace with your desired default\n\n          if (cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n          headers.push(hdr);\n        }\n\n        return headers;\n      },\n      workbook_to_json: function (workbook) {\n        var result = {};\n        workbook.SheetNames.forEach(function (sheetName) {\n          var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n\n          if (roa.length > 0) {\n            result[sheetName] = roa;\n          }\n        });\n        return result;\n      }\n    },\n    watch: {\n      'testImport.fileName': function (val) {\n        if (!val) {\n          this.testImport.file = null;\n        }\n      },\n      currentSize: function (val) {\n        this.isSearching = true;\n        this.skip = (this.currentPage - 1) * val;\n        this.queryData(this.searchData, this.skip, val + this.skip);\n      },\n      currentPage: function (val) {\n        this.isSearching = true;\n        this.skip = (val - 1) * this.currentSize;\n        this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n      },\n      searchData: function (val) {\n        this.isSearching = true;\n        this.skip = (this.currentPage - 1) * this.currentSize;\n        this.queryData(val, this.skip, this.currentSize + this.skip);\n      }\n    },\n    created: function () {\n      this.patientId = FlowRouter.getParam('patientId');\n      this.isSearching = true;\n      this.queryData();\n    }\n  });\n}.call(this, module);","map":{"version":3,"sources":["/home/snr/Desktop/Project/cosmetic/imports/vue/ui/ImportFile.vue"],"names":["XLSX","module1","link","v","exportDefault","name","data","rawData","loading","searchData","isSearching","currentPage","currentSize","count","skip","newLoading","testImportLoading","testImport","fileName","file","weightTestData","patientId","disabledRemove","methods","handleSizeChange","val","handleCurrentChange","printWeightTest","FlowRouter","go","_id","queryData","_","debounce","limit","Meteor","call","q","filter","rolesArea","Session","get","options","err","result","content","countWeightTest","handlePreview","handleSuccess","respond","fileList","submitTestImport","raw","handleBeforeUpload","pickTestFile","$refs","testImportFile","click","onTestFilePicked","e","files","target","undefined","matchExtension","match","setTimeout","readDataFromFile","onFileRead","docs","insertData","error","alertify","success","fixdata","o","l","w","byteLength","String","fromCharCode","apply","Uint8Array","slice","removeWeightTest","index","row","rows","vm","$confirm","confirmButtonText","cancelButtonText","type","then","splice","$message","message","id","testNo","catch","reader","FileReader","onload","event","contents","lines","split","readAsText","get_header_row","sheet","headers","range","utils","decode_range","C","R","s","r","c","cell","encode_cell","hdr","t","format_cell","push","workbook_to_json","workbook","SheetNames","forEach","sheetName","roa","sheet_to_row_object_array","Sheets","length","watch","created","getParam"],"mappings":"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","sourcesContent":["\nimport XLSX from 'xlsx';\n// import \"element-ui\";\n\nexport default {\n    name: \"ImportFile\",\n    data() {\n        return {\n            rawData: [],\n            loading: false,\n            searchData: '',\n            isSearching: false,\n            currentPage: 1,\n            currentSize: 10,\n            count: 0,\n            skip: 0,\n            newLoading: true,\n            /*currentUser: this.$store.state.currentUser,\n            currentModule: this.$store.state.currentModule,\n            *///test\n            testImportLoading: false,\n            testImport: {\n                fileName: '',\n                file: ''\n            },\n            weightTestData: [],\n            patientId: \"\",\n            disabledRemove: false,\n            //rules\n            /*rules: {\n                testImportFileName: [v => !!v || this.$t('fileIsRequired')],\n            },*/\n        }\n    },\n    methods: {\n        handleSizeChange(val) {\n            this.currentSize = val;\n        },\n        handleCurrentChange(val) {\n            this.currentPage = val;\n        },\n        printWeightTest(data) {\n            FlowRouter.go(`/co-report/weightTest/${data._id}/print`);\n        },\n        queryData: _.debounce(function (val, skip, limit) {\n            this.newLoading = true;\n            Meteor.call('queryWeightTest', {\n                q: val,\n                filter: this.filter,\n                rolesArea: Session.get('area'),\n                patientId: this.patientId,\n                options: {skip: skip || 0, limit: limit || 10}\n            }, (err, result) => {\n                if (!err) {\n                    this.weightTestData = result.content;\n                    this.count = result.countWeightTest;\n                }\n                this.isSearching = false;\n                this.newLoading = false;\n            });\n        }, 300),\n        handlePreview(file) {\n\n        },\n        handleSuccess(respond, file, fileList) {\n            this.submitTestImport(file.raw);\n        },\n        handleBeforeUpload(file) {\n\n        },\n\n        pickTestFile() {\n            this.$refs.testImportFile.click();\n        },\n        onTestFilePicked(e) {\n            const files = e.target.files;\n            if (files[0] !== undefined) {\n                const matchExtension = files[0].name.match(/xlsx/g);\n                if (!matchExtension) {\n                    // this.$toaster.error(this.$t('fileTypeMustBeXlsx'));\n                    this.testImport.file = [];\n                    this.testImport.fileName = '';\n                } else {\n                    this.testImport.fileName = files[0].name;\n                    this.testImport.file = files[0];\n                }\n            } else {\n                this.testImport.fileName = '';\n                this.testImport.file = null;\n            }\n        },\n        submitTestImport(file) {\n            // this.testImportLoading = true;\n            //const {file} = this.testImport;\n            this.testImport.fileName = file.name;\n            setTimeout(() => {\n                this.readDataFromFile({\n                    file,\n                    onFileRead: (docs) => this.insertData({\n                        docs,\n                        error: () => {\n                            alertify.error(\"Failed to upload file!!\");\n                        },\n                        success: () => {\n                            this.queryData();\n                            alertify.success(\"Upload success!!\");\n\n\n                        }\n                    })\n                })\n\n                /*this.readDataFromFile({\n                    file,\n                    onFileRead: (docs) => this.uploadData({\n                        methodName: 'sam_importTest', docs,\n                        error: () => {\n                            this.testImportLoading = false;\n                            this.testImport.fileName = '';\n                            this.testImport.file = null;\n                        },\n                        success: () => {\n                            this.testImportLoading = false;\n                            this.testImport.fileName = '';\n                            this.testImport.file = null;\n                        }\n                    })\n                })*/\n            }, 500);\n        },\n        /*binaryDecode(data) {\n            let ret = '';\n            if (data) {\n                let byteArray = new Uint8Array(data);\n                for (let i = 0; i < data.byteLength; i++) {\n                    ret = ret + String.fromCharCode(byteArray[i]);\n                }\n            }\n            return ret;\n        },*/\n        //\n        /*uploadData({methodName, docs, error, success}) {\n            this.rawData = docs;\n            /!*Meteor.call(methodName, {userId: this.currentUser._id, docs: docs, module: this.currentModule}, (err, res) => {\n              if (!err) {\n                this.$toaster.success('បញ្ជូនរួចរាល់');\n                success();\n              } else {\n                this.$toaster.error(err.message);\n                error();\n              }\n            });*!/\n        }*/\n        insertData({docs, error, success}) {\n            Meteor.call(\"insertWeightTest\", docs, Session.get(\"area\"), this.patientId, this.testImport.fileName, (err, result) => {\n                if (!err) {\n                    success();\n                } else {\n                    error();\n                }\n            })\n        },\n        fixdata(data) {\n            let o = \"\",\n                l = 0,\n                w = 10240;\n            for (l; l < data.byteLength / w; ++l)\n                o += String.fromCharCode.apply(\n                    null,\n                    new Uint8Array(data.slice(l * w, l * w + w))\n                );\n            o += String.fromCharCode.apply(null, new Uint8Array(data.slice(l * w)));\n            return o;\n        },\n        removeWeightTest(index, row, rows) {\n            let vm = this;\n            this.$confirm('This will permanently delete the Item. Continue?', 'Warning', {\n                confirmButtonText: 'OK',\n                cancelButtonText: 'Cancel',\n                type: 'warning'\n            }).then(() => {\n                Meteor.call(\"removeWeightTest\", row._id, (err, result) => {\n                    if (!err) {\n                        rows.splice(index, 1);\n\n                        vm.$message({\n                            message: `\n                    លុប ${row.id} : ${row.testNo} បានជោគជ័យ`,\n                            type: 'success'\n                        });\n\n\n                    } else {\n                        vm.$message({\n                            type: 'error',\n                            message: 'Delete Fialed'\n                        });\n                    }\n\n                })\n\n            }).catch(() => {\n                this.$message({\n                    type: 'info',\n                    message: 'Delete canceled'\n                });\n            });\n        },\n        readDataFromFile({file, onFileRead}) {\n            /*let reader = new FileReader();\n            reader.onload = (val) => {\n                let results,\n                    data = val.target.result,\n                    fixedData = this.fixdata(data),\n                    workbook = XLSX.read(btoa(fixedData), {type: \"base64\"}),\n                    firstSheetName = workbook.SheetNames[0],\n                    worksheet = workbook.Sheets[firstSheetName];\n                results = XLSX.utils.sheet_to_json(worksheet);\n                onFileRead(results);\n            };\n            reader.readAsArrayBuffer(file);*/\n\n            let reader = new FileReader();\n            reader.onload = (event) => {\n                // NOTE: event.target point to FileReader\n                let contents = event.target.result;\n                let lines = contents.split('\\n');\n                //////\n                // document.getElementById('container').innerHTML = contents;\n                onFileRead(lines);\n            };\n\n            reader.readAsText(file);\n        }\n        ,\n        get_header_row(sheet) {\n            let headers = [], range = XLSX.utils.decode_range(sheet[\"!ref\"]);\n            let C, R = range.s.r;\n            /* start in the first row */\n            for (C = range.s.c; C <= range.e.c; ++C) {\n                /* walk every column in the range */\n                let cell = sheet[XLSX.utils.encode_cell({c: C, r: R})];\n                /* find the cell in the first row */\n                let hdr = \"UNKNOWN \" + C; // <-- replace with your desired default\n                if (cell && cell.t) hdr = XLSX.utils.format_cell(cell);\n                headers.push(hdr);\n            }\n            return headers;\n        }\n        ,\n        workbook_to_json(workbook) {\n            let result = {};\n            workbook.SheetNames.forEach(function (sheetName) {\n                let roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);\n                if (roa.length > 0) {\n                    result[sheetName] = roa;\n                }\n            });\n            return result;\n        }\n        ,\n    },\n    watch: {\n        'testImport.fileName'(val) {\n            if (!val) {\n                this.testImport.file = null;\n            }\n        },\n        currentSize(val) {\n            this.isSearching = true;\n            this.skip = (this.currentPage - 1) * val;\n            this.queryData(this.searchData, this.skip, val + this.skip);\n        },\n        currentPage(val) {\n            this.isSearching = true;\n            this.skip = (val - 1) * this.currentSize;\n            this.queryData(this.searchData, this.skip, this.currentSize + this.skip);\n        },\n        searchData(val) {\n            this.isSearching = true;\n            this.skip = (this.currentPage - 1) * this.currentSize;\n            this.queryData(val, this.skip, this.currentSize + this.skip);\n        }\n    },\n    created() {\n        this.patientId = FlowRouter.getParam('patientId');\n        this.isSearching = true;\n        this.queryData();\n    }\n}\n"]},"sourceType":"module","hash":"f30526e937d4278f995af6b4ef7d282974bc97ee"}
